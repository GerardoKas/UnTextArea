package untextarea;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.undo.UndoManager;

/**
 *
 * @author Gerardo.Castro.Mtz
 */
public class FramePrincipal extends javax.swing.JFrame {

    private UndoManager undoManager;
    private MetodosLoadSave mls= new MetodosLoadSave();
    public JTextArea getTextArea (){
        return this.jTextArea;
    }
                ////////////////////////////////////////////
    public FramePrincipal() {
        initComponents();
        
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.jTextArea.requestFocus();
        undoManager = new UndoManager();
        jTextArea.getDocument().addUndoableEditListener(new UndoableEditListener() {
            public void undoableEditHappened(UndoableEditEvent e) {
                undoManager.addEdit(e.getEdit());
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        txtRuta = new javax.swing.JTextField();
        status = new javax.swing.JLabel();
        jBtnEjecutar = new javax.swing.JButton();
        jLabelCMD = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuNuevo = new javax.swing.JMenuItem();
        jMenuAbrir = new javax.swing.JMenuItem();
        jMenuGuardar = new javax.swing.JMenuItem();
        jMenuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuRehacer = new javax.swing.JMenuItem();
        jMenuDeshacer = new javax.swing.JMenuItem();
        jMenuCopiar = new javax.swing.JMenuItem();
        jMenuPegar = new javax.swing.JMenuItem();
        jMenuSelTodo = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemBuscaSeleccionado = new javax.swing.JMenuItem();
        jMenuBuscar = new javax.swing.JMenuItem();
        jMenuItemReemplazar = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuColorTexto = new javax.swing.JMenuItem();
        jMenuColorFondo = new javax.swing.JMenuItem();
        jMenuZoomMas = new javax.swing.JMenuItem();
        jMenuZoomMenos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTextArea.setRows(5);
        jTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextArea.setDragEnabled(true);
        jScrollPane1.setViewportView(jTextArea);

        txtRuta.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        txtRuta.setActionCommand("<Not Set>");
        txtRuta.setName(""); // NOI18N
        txtRuta.setOpaque(true);
        txtRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaActionPerformed(evt);
            }
        });

        status.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        status.setText("Estado Ok");

        jBtnEjecutar.setText("Ejecutar");
        jBtnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEjecutarActionPerformed(evt);
            }
        });

        jLabelCMD.setText("CMD.EXE");

        jMenu1.setText("File");

        jMenuNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuNuevo.setText("Nuevo");
        jMenuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuNuevo);

        jMenuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuAbrir.setText("Abrir");
        jMenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuAbrir);

        jMenuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuGuardar.setText("Guardar");
        jMenuGuardar.setName(""); // NOI18N
        jMenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuGuardar);

        jMenuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuSalir.setText("Salir");
        jMenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuRehacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuRehacer.setText("Rehacer");
        jMenuRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRehacerActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuRehacer);

        jMenuDeshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuDeshacer.setText("Deshacer");
        jMenuDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuDeshacerActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuDeshacer);

        jMenuCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuCopiar.setText("Copiar");
        jMenuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCopiarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuCopiar);

        jMenuPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuPegar.setText("Pegar");
        jMenuPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPegarActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuPegar);

        jMenuSelTodo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuSelTodo.setText("Seleccionar Todo");
        jMenuSelTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSelTodoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuSelTodo);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Buscar");

        jMenuItemBuscaSeleccionado.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItemBuscaSeleccionado.setText("Busca lo Seleccionado F3");
        jMenuItemBuscaSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBuscaSeleccionadoActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemBuscaSeleccionado);

        jMenuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuBuscar.setText("Busca");
        jMenuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBuscarActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuBuscar);

        jMenuItemReemplazar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemReemplazar.setText("Reemplazar");
        jMenu3.add(jMenuItemReemplazar);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Ver");

        jMenuColorTexto.setText("Color Texto");
        jMenuColorTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuColorTextoActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuColorTexto);

        jMenuColorFondo.setText("Color Fondo");
        jMenu4.add(jMenuColorFondo);

        jMenuZoomMas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuZoomMas.setText("Zoom +");
        jMenuZoomMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuZoomMasActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuZoomMas);

        jMenuZoomMenos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuZoomMenos.setText("Zoom -");
        jMenuZoomMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuZoomMenosActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuZoomMenos);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCMD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnEjecutar)))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEjecutar)
                    .addComponent(jLabelCMD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAbrirActionPerformed

        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.home")));

        // Agregar los filtros al FileChooser
        jfc.addChoosableFileFilter(new FileNameExtensionFilter("Documentos", "docx", "pdf", "rtf"));
        jfc.addChoosableFileFilter(new FileNameExtensionFilter("Texto Plsno", "txt", "c", "java", "*.c"));

        int resultado = jfc.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            String ruta= jfc.getSelectedFile().toString();
            
            jTextArea.setText(mls.leerArchivo(ruta));
            status.setText("Archivo Abierto ->" + ruta);
            txtRuta.setText(ruta);
        }
    }//GEN-LAST:event_jMenuAbrirActionPerformed

    private void jMenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuSalirActionPerformed

    private void jMenuSelTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSelTodoActionPerformed
        jTextArea.selectAll();
        jTextArea.requestFocus();
    }//GEN-LAST:event_jMenuSelTodoActionPerformed

    private void jMenuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCopiarActionPerformed
        StringSelection ss = new StringSelection(jTextArea.getSelectedText());
        Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
        clip.setContents(ss, null);
        status.setText("Copiado...");
    }//GEN-LAST:event_jMenuCopiarActionPerformed

    private void jMenuPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPegarActionPerformed
        Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable data = clip.getContents(null);
        if (data != null && data.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                String texto = (String) data.getTransferData(DataFlavor.stringFlavor);
                // int posicion = jTextArea.getCaretPosition();
                jTextArea.replaceSelection(texto);//area.getCaretPosition());
                status.setText("Pegado ...");
            } catch (UnsupportedFlavorException | IOException ex) {
                System.out.println("EROR AL PEGAR");
            }
        }
    }//GEN-LAST:event_jMenuPegarActionPerformed

    private void jMenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGuardarActionPerformed

        JFileChooser jfc = new JFileChooser();
        String ruta;
        jfc.setCurrentDirectory(new File(System.getProperty("user.home")));
        jfc.setFileFilter(new FileNameExtensionFilter("Texto Plano", "txt", "rtf", "java", "c"));
        int resultado = jfc.showSaveDialog(this);
        
        if (resultado == JFileChooser.APPROVE_OPTION) {
            ruta=jfc.getSelectedFile().getAbsoluteFile().toString();
            
            if (mls.salvarArchivo(ruta,jTextArea.getText())) {
                status.setText("Guardado con exito en: " + ruta);
                txtRuta.setText(ruta);
            }
        } else {
            System.out.println("NO GRABASTE");
        }
    }//GEN-LAST:event_jMenuGuardarActionPerformed

    private void jMenuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNuevoActionPerformed
        jTextArea.setText("");
    }//GEN-LAST:event_jMenuNuevoActionPerformed

    private void jMenuRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRehacerActionPerformed
        if (undoManager.canRedo()) {
            undoManager.redo();
        } else {
            jMenuRehacer.enableInputMethods(false);
        }
    }//GEN-LAST:event_jMenuRehacerActionPerformed

    private void jMenuDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuDeshacerActionPerformed
        if (undoManager.canUndo()) {
            undoManager.undo();
        } else {
            jMenuDeshacer.enableInputMethods(false);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuDeshacerActionPerformed

    private void jMenuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBuscarActionPerformed
    
    }//GEN-LAST:event_jMenuBuscarActionPerformed

    private void txtRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaActionPerformed

    private void jMenuItemBuscaSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBuscaSeleccionadoActionPerformed
        // TODO add your handling code here:
            // TODO add your handling code here:
        String textoBuscar = jTextArea.getSelectedText();
        String textoCompleto = jTextArea.getText();

        int indice = jTextArea.getCaretPosition();

        //while (indice < textoCompleto.length()) {
            indice = textoCompleto.indexOf(textoBuscar, indice);
            if (indice >= 0) {
                jTextArea.select(indice, indice + textoBuscar.length());
            }
            //indice+=textoBuscar.length()+1; // Incrementar indice en cada iteración
        //}

    }//GEN-LAST:event_jMenuItemBuscaSeleccionadoActionPerformed

    private void jMenuColorTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuColorTextoActionPerformed
        // TODO add your handling code here:
       Color colorSeleccionado = JColorChooser.showDialog(null, "Selecciona un color", Color.BLUE);
         jTextArea.setBackground(colorSeleccionado); // Color de fondo gris claro
        jTextArea.setForeground(colorSeleccionado); // Color de texto azul

    }//GEN-LAST:event_jMenuColorTextoActionPerformed

    private void jMenuZoomMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuZoomMasActionPerformed
        // TODO add your handling code here:
        int size=jTextArea.getFont().getSize();
        size+=2;
        if(size<64){
        jTextArea.setFont(new Font("Arial",0,size));
        }
    }//GEN-LAST:event_jMenuZoomMasActionPerformed

    private void jMenuZoomMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuZoomMenosActionPerformed
        // TODO add your handling code here:
         int size=jTextArea.getFont().getSize();
        size-=2;
        if(size<=10){
            size=10;
        }
        jTextArea.setFont(new Font("Arial",0,size));
    }//GEN-LAST:event_jMenuZoomMenosActionPerformed

    private void jBtnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEjecutarActionPerformed
try {
            // Comando a ejecutar (por ejemplo, listar los archivos de un directorio)
            //String comando = "cmd /c dir  c:\\*";
            String comando = "cmd /c "+txtRuta;
            int numLineas=0;
            
            // Ejecutar el comando
            Process proceso = Runtime.getRuntime().exec(comando);

            // Obtener la salida estándar
            BufferedReader entrada = new BufferedReader(new InputStreamReader(proceso.getInputStream()));
            String linea;
            while ((linea = entrada.readLine()) != null) {
                System.out.println(linea);
                numLineas++;
            }

            // Esperar a que el proceso termine
            int codigoSalida = proceso.waitFor();
            
            JOptionPane.showMessageDialog(null,"Salida:"+codigoSalida+"\n"+"Num Lineas:"+ numLineas);
            //System.out.println("El comando terminó con código: " + codigoSalida);

        } catch (Exception e) {
            //e.getMessage();
            JOptionPane.showMessageDialog(null, "ERROR:\n" + e.getMessage());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnEjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FramePrincipal().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnEjecutar;
    private javax.swing.JLabel jLabelCMD;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuItem jMenuAbrir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuBuscar;
    private javax.swing.JMenuItem jMenuColorFondo;
    private javax.swing.JMenuItem jMenuColorTexto;
    private javax.swing.JMenuItem jMenuCopiar;
    private javax.swing.JMenuItem jMenuDeshacer;
    private javax.swing.JMenuItem jMenuGuardar;
    private javax.swing.JMenuItem jMenuItemBuscaSeleccionado;
    private javax.swing.JMenuItem jMenuItemReemplazar;
    private javax.swing.JMenuItem jMenuNuevo;
    private javax.swing.JMenuItem jMenuPegar;
    private javax.swing.JMenuItem jMenuRehacer;
    private javax.swing.JMenuItem jMenuSalir;
    private javax.swing.JMenuItem jMenuSelTodo;
    private javax.swing.JMenuItem jMenuZoomMas;
    private javax.swing.JMenuItem jMenuZoomMenos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JLabel status;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables

}
